from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters
import os

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMINS = [123456789]  # ← здесь вставь свой Telegram ID

reply_mapping = {}

async def user_message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    for admin_id in ADMINS:
        sent_message = await context.bot.send_message(
            chat_id=admin_id,
            text=f"Сообщение от {user.full_name} (@{user.username or 'без username'}, ID: {user.id}):\n\n{text}"
        )
        reply_mapping[sent_message.message_id] = user.id

async def admin_reply_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.reply_to_message:
        original_message_id = update.message.reply_to_message.message_id
        user_id = reply_mapping.get(original_message_id)
        if user_id:
            await context.bot.send_message(chat_id=user_id, text=update.message.text)
        else:
            await update.message.reply_text("Не удалось определить получателя.")
    else:
        await update.message.reply_text("Ответьте на сообщение пользователя, чтобы отправить ему ответ.")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.User(ADMINS)), user_message_handler))
    app.add_handler(MessageHandler(filters.TEXT & filters.User(ADMINS), admin_reply_handler))
    app.run_polling()

if __name__ == '__main__':
    main()
